import { useState, useRef, useEffect } from "react";
import { AiOutlineHeart } from "react-icons/ai";

import Head from "next/head";
import Image from "next/image";
import vinyl from "./../../public/assets/images/vinyl.png";
import brasVinyl from "./../../public/assets/images/brasVinyl.png";

export default function Home({ songs }) {
  const [audioSrc, setaudioSrc] = useState();
  const [isPlaying, setisPlaying] = useState(false);
  const [currentTime, setcurrentTime] = useState();
  const [currentSong, setcurrentSong] = useState();
  const audioRef = useRef();

  const play = async (e) => {
    const index = e.target.dataset.index;
    await setaudioSrc(songs[index].src);
    if (songs[index].isPlaying) {
      delete songs[index].isPlaying;
      setisPlaying(!isPlaying);
      isPlaying ? audioRef.current.pause() : audioRef.current.play();
      return;
    }
    songs.forEach((song) => {
      delete song.isPlaying;
    });
    songs[index].isPlaying = true;
    await audioRef.current.play();
    setisPlaying(true);
    const time = convertInMinutesSecondes(audioRef.current.duration);
    setcurrentTime(time);
    setcurrentSong(songs[index]);
  };

  const handleEnded = async () => {
    await setaudioSrc(songs[0].src);
    console.log(audioSrc);
    const time = convertInMinutesSecondes(audioRef.current.duration);
    setcurrentTime(time);
    audioRef.current.play();
  };

  const convertInMinutesSecondes = (secondes) => {
    const minutes = Math.floor(secondes / 60);
    let seconds = Math.floor(secondes - minutes * 60);
    seconds < 10 && (seconds = "0" + seconds);
    const convert = `${minutes}:${seconds}`;
    return convert;
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="wrapper">
        <div className="wrapperVinyl">
          <Image
            src={vinyl}
            className={`vinyle ${isPlaying && "turn"}`}
            alt="vinyl"
          ></Image>
          <Image src={brasVinyl} className="brasVinyl" alt="bras"></Image>
        </div>
        <header></header>
        <main>
          <div>
            <div className="grid-container">
              <div className="grid-x grid-padding-x align-middle align-justify">
                <div className="cell small-6 h40vh">
                  {songs.map((song, index) => {
                    let formattedNumber = index.toLocaleString("en-US", {
                      minimumIntegerDigits: 2,
                      useGrouping: false,
                    });
                    return (
                      <div key={index}>
                        <div className="grid-x grid-padding-x align-middle mb1">
                          <div className="cell shrink">
                            <div className="picture">
                              <Image
                                src={song.img}
                                alt={song.title}
                                width={100}
                                height={100}
                              />
                            </div>
                          </div>
                          <div className="cell shrink">
                            <div>{formattedNumber}</div>
                          </div>
                          <div className="cell shrink">
                            <div className="title">{song.title} </div>
                            <small
                              className="btnPlayPause"
                              onClick={play}
                              data-index={index}
                            >
                              {song.isPlaying ? "pause" : "play"}
                            </small>
                          </div>
                        </div>
                      </div>
                    );
                  })}
                </div>
                <div className="cell small-3">
                  {currentSong != null && (
                    <>
                      <div>
                        <Image
                          className="cover"
                          src={currentSong.img}
                          alt={currentSong.title}
                          width={500}
                          height={500}
                        />
                      </div>
                      <div className="grid-x grid-padding-x align-middle">
                        <div className="cell shrink ">
                          <h5>{currentSong.title}</h5>
                        </div>
                        <div className="cell auto text-right">
                          <AiOutlineHeart />
                        </div>
                      </div>
                      <small>{currentTime}</small>
                    </>
                  )}
                </div>
              </div>
            </div>
          </div>
        </main>
        <footer>
          <audio
            // controls
            src={`/assets/musics/${audioSrc}`}
            ref={audioRef}
            onEnded={handleEnded}
          ></audio>
        </footer>
      </div>
    </>
  );
}
export async function getStaticProps() {
  const res = await fetch(`api/music`);
  const songs = await res.json();

  // Pass data to the page via props
  return { props: { songs } };
}
